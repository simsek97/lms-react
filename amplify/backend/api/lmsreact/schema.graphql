# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type S3Object {
  key: String!
  url: String!
}
type UserSubscription {
  tier: String!
  title: String!
  price: Int!
  canceled: String
  subscribedAt: String
  expiresAt: String
  montlyPriceId: String
  yearlyPriceId: String
}
type SubscriptionTier @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public, operations: [read] }]) {
  id: ID!
  tier: String!
  title: String!
  price: Float!
  description: [String]
  montlyPriceId: String
  yearlyPriceId: String
}
type User @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public }]) {
  id: ID!
  sub: String
  firstname: String!
  lastname: String!
  email: String! @index(name: "byEmail", queryField: "userByEmail")
  role: String
  owner: String!
  avatar: S3Object
  stripeCustomerId: String @index(name: "byCustomerId", queryField: "userByCustomerId")
  subscription: UserSubscription
  favorites: [Favorite] @hasMany(indexName: "byUser", fields: ["id"])
}
type Category @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public }]) {
  id: ID!
  name: String
  slug: String
  courses: [Course] @hasMany(indexName: "byCategory", fields: ["id"])
}
type Level @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public }]) {
  id: ID!
  name: String
  slug: String
  courses: [Course] @hasMany(indexName: "byLevel", fields: ["id"])
}
type Course @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public }]) {
  id: ID!
  title: String
  slug: String
  shortDesc: String
  overview: String
  latestPrice: Int
  beforePrice: Int
  lessons: String
  duration: String
  image: S3Object
  requirements: String
  whatYouWillLearn: String
  whoIsThisCourseFor: String
  catID: ID! @index(name: "byCategory")
  category: Category! @belongsTo(fields: ["catID"])
  levelID: ID! @index(name: "byLevel")
  level: Level! @belongsTo(fields: ["levelID"])
  inHomePage: String
  inHomePageSetAt: String
  isClass: String
}
type Favorite @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public, operations: [read] }]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  user: User! @belongsTo(fields: ["userID"])
  courseID: ID! @index(name: "byCourse")
}
type WelcomeMessage @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public, operations: [read] }]) {
  id: ID!
  title: String
  content: String!
  footer: String
}
type AdBanner @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public, operations: [read] }]) {
  id: ID!
  bannerKey: String!
}
type Faq @model @auth(rules: [{ allow: owner }, { allow: private }, { allow: public, operations: [read] }]) {
  id: ID!
  category: String!
  question: String!
  answer: String!
}
